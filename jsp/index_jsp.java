/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-04-29 18:04:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 String id="",id_pwd=""; 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head> \r\n");
      out.write("<style type='text/css'>\r\n");
      out.write("  body\r\n");
      out.write("  {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("  background-image: url('images/Index.png');\r\n");
      out.write("  background-repeat: no-repeat;\r\n");
      out.write("  text-shadow: white 0px 0px 2px;\r\n");
      out.write("  font-size: 16px;\r\n");
      out.write("  background-size: 110% 100%;\r\n");
      out.write("  background-position:top center; \r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("\t\tp{\r\n");
      out.write("\t\tfont-size: 10;\r\n");
      out.write("\t\tline-height: 40%;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("function HandleOnClose(){\r\n");
      out.write("alert(\"Bye now!\");\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button2\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Login.jpg');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 100px;\r\n");
      out.write("\t\t\theight: 30px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.textsize td{ font-family: Cambria; font-size: 10pt; }\r\n");
      out.write("\t\t\t.textsize{\r\n");
      out.write("\t\t\tposition: absolute;\r\n");
      out.write("\t\t\tbottom:0px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.position{\r\n");
      out.write("\t\t\tposition: absolute;\r\n");
      out.write("\t\t\ttop:10px;\r\n");
      out.write("\t\t\tright:10px;\r\n");
      out.write("\t\t\tfont-size: 15pt;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("</style>\r\n");
      out.write("\t<title>Trainig Portal</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body onunload=\"HandleOnClose()\">\r\n");
      out.write("<table style=\"float: left\" class='textsize'>\r\n");
      out.write("<tr><td>THE SARAL PLM Application: Only authorised person should access the application </td></tr>\r\n");
      out.write("<tr><td>For more information about PLM / Project SARAL : <a href='http://heintra:1987/SITES/HEDCONNECT/hes/powai/saral_plm/SitePages/Home_copy(2).aspx\r\n");
      out.write("'> SARAL </a></td></tr>\r\n");
      out.write("<tr><td>PLM HelpDesk (POWAI) : 4667 / 2816 / 1016 / 5640 / 4670 / 4669 / 2966 / 5603</td></tr>\r\n");
      out.write("<tr><td>PLM HelpDesk (HAZIRA) : 7388 </td></tr>\r\n");
      out.write("<tr><td> <a href='PLMTeam.jsp'> PLM Team </a></td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("\t<form  action=\"login\" method=\"POST\" >\r\n");
      out.write("\t\t<table align=\"right\" class='position'>\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t\t<td>Enter User name  : </td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" onfocus=\"this.value=''\" value=\"134085\" name=\"username\"></td>\t\t\r\n");
      out.write("\t\t  </tr>\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t\t<td>Enter Password &nbsp   :</td>\r\n");
      out.write("\t\t\t<td><input type=\"password\"  onfocus=\"this.value=''\" value=\"shah\" name=\"password\"></td>\t\t\r\n");
      out.write("\t\t  </tr>\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t\t<td></td>\r\n");
      out.write("\t\t\t<td align=\"right\"><span style=\"cursor:pointer;\"><input type=\"button\" value=\"Login\" onClick=\"submit()\"></span></td>\r\n");
      out.write("\t\t  </tr>\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t    <td colspan=\"2\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t");
 id=request.getParameter("id"); 
			   id_pwd=request.getParameter("id_pwd");
			   
			if(id!=null && id.equals("notexists")){	
      out.write("\r\n");
      out.write("\t\t\t<b><h3><font color=\"red\">Invalid id/pwd</h3></b>\r\n");
      out.write("\t\t\t");
 } if(id_pwd!=null && id_pwd.equals("notmatch")) { 
      out.write("\r\n");
      out.write("\t\t\t<h3><b><font color=\"red\" >id/password not match</h3></b>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t  </td></tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
