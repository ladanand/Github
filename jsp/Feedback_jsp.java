/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-04-29 18:03:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;

public final class Feedback_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


String sessionUsername;

 
String name;
 Connection conn=null;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/Logout.jsp", Long.valueOf(1434966448000L));
    _jspx_dependants.put("/TrainingPortalHeader.html", Long.valueOf(1434788270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" <html>\r\n");
      out.write(" <head>\r\n");
      out.write(" <script type = \"text/javascript\" >\r\n");
      out.write("    history.pushState(null, null, 'Feedback.jsp');\r\n");
      out.write("    window.addEventListener('popstate', function(event) {\r\n");
      out.write("    history.pushState(null, null, 'Feedback.jsp');\r\n");
      out.write("    });\r\n");
      out.write("</script>  \r\n");
      out.write("<!-- <script>\r\n");
      out.write("window.location.hash=\"no-back-button\";\r\n");
      out.write("window.location.hash=\"Again-No-back-button\";//again because google chrome don't insert first hash into history\r\n");
      out.write("window.onhashchange=function(){window.location.hash=\"no-back-button\";}\r\n");
      out.write("</script> -->\r\n");
      out.write("\t\t\t<SCRIPT LANGUAGE=\"JAVASCRIPT\">\r\n");
      out.write("\t\t\t\tfunction myFun()\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tvar ShowAlert = '';\r\n");
      out.write("\t\t\t\t\tvar AllFormElements = window.document.getElementById(\"FormID\").elements;\r\n");
      out.write("\t\t\t\t\tfor (i = 0; i < AllFormElements.length; i++) \r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tif (AllFormElements[i].type == 'radio') {\r\n");
      out.write("\t\t\t\t\t\t\tvar ThisRadio = AllFormElements[i].name;\r\n");
      out.write("\t\t\t\t\t\t\tvar ThisChecked = 'No';\r\n");
      out.write("\t\t\t\t\t\t\tvar AllRadioOptions = document.getElementsByName(ThisRadio);\r\n");
      out.write("\t\t\t\t\t\t\tfor (x = 0; x < AllRadioOptions.length; x++)\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t if (AllRadioOptions[x].checked && ThisChecked == 'No')\r\n");
      out.write("\t\t\t\t\t\t\t\t {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t ThisChecked = 'Yes';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t break;\r\n");
      out.write("\t\t\t\t\t\t\t\t } \r\n");
      out.write("\t\t\t\t\t\t\t}   \r\n");
      out.write("\t\t\t\t\t\t\tvar AlreadySearched = ShowAlert.indexOf(ThisRadio);\r\n");
      out.write("\t\t\t\t\t\t\tif (ThisChecked == 'No' && AlreadySearched == -1)\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tShowAlert = ShowAlert + ThisRadio + ' radio button must be answered\\n';\r\n");
      out.write("\t\t\t\t\t\t\t}     \r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\telse if(AllFormElements[i].type =='textarea'){\r\n");
      out.write("\t\t\t\t\t\tvar ThisA = AllFormElements[i].value;\r\n");
      out.write("\t\t\t\t\t\tvar name = AllFormElements[i].name;\r\n");
      out.write("\t\t\t\t\t\t\tif(ThisA.length < 1){\r\n");
      out.write("\t\t\t\t\t\t\tShowAlert = ShowAlert + name +' textarea must be answered\\n';\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tvar ThisA = AllFormElements[i].value;\r\n");
      out.write("\t\t\t\t\t\tvar name = AllFormElements[i].name;\r\n");
      out.write("\t\t\t\t\t\t\tif(ThisA.length < 1){\r\n");
      out.write("\t\t\t\t\t\t\tShowAlert = ShowAlert + name +' must select\\n';\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (ShowAlert != '')\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t//alert(ShowAlert);\r\n");
      out.write("\t\t\t\t\talert('All Field Required..');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t</SCRIPT>\r\n");
      out.write(" <link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            <!--.button6\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/back_7.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 90px;\r\n");
      out.write("\t\t\theight: 30px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\t} -->\r\n");
      out.write("\t\t\t.button7\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Sumbit.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 90px;\r\n");
      out.write("\t\t\theight: 30px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("p {\r\n");
      out.write("font-size: 20px;\r\n");
      out.write("font-family: Cambria;\r\n");
      out.write("color:red;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write(" </head>\r\n");
      out.write(" <body bgcolor=\"#7FFFD4\">\r\n");
      out.write(" ");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t\t\tbody{\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("            padding-top: 0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<img src=\"./images/PortalHeader.png\" width=\"100%\" height=\"25%\" alt=\"Training Portal\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button1\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Logout.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 100px;\r\n");
      out.write("\t\t\theight: 50px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\tpadding-right: 5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action='SessionInvalidate.jsp' method='post'>\r\n");
      out.write('\r');
      out.write('\n');

sessionUsername=(String)session.getAttribute("userName");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<input type='submit' value='' class=\"button1\"  onclick=\"return confirm('Are you sure you want to Logout?')\" style=\"float: right; position: relative; top: 15px; right: 10px;\"/>\r\n");
      out.write("</form>\r\n");

out.print("<a href='/Dummy/Second.jsp?name="+sessionUsername+"'><image src='./images/HOMEBUTTON.png' height='50' width='50' padding-right='10' style='float: right; position: relative; right: 20px;'></a>");

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.write("\r\n");
      out.write(" <h1 align=\"center\"><font face=\"Cambria\" color=\"maroon\">Training Evaluation Sheet</font> </h1>\r\n");
      out.write(" <form action=\"FeedbackStore.jsp\" method=\"post\" id=\"FormID\">\r\n");
      out.write(" ");

try {
	

String JDBC_DRIVER="",DB_URL="",user_name="",pass="";
	ServletContext context=null;
	
	context = pageContext.getServletContext();
	name=(String)session.getAttribute("userName");
	JDBC_DRIVER = context.getInitParameter("connector_class_name");
	DB_URL = context.getInitParameter("connection_url");
	user_name = context.getInitParameter("username");
	pass = context.getInitParameter("password");

	
Class.forName(JDBC_DRIVER);
Connection conn=DriverManager.getConnection(DB_URL,user_name,"");
	
name=(String)session.getAttribute("userName");

String s="select ReqNo from PLMTrainingModuleData where UserId='"+name+"' and Feedback='no' and Attended='yes' and ReqNo like 'TR%'" ;
PreparedStatement stmt=conn.prepareStatement(s);
ResultSet rs=stmt.executeQuery();

if(rs!=null && rs.next()){

String reqNo1=rs.getString("ReqNo");
out.print(" RequestNo :<select name='ReqNo_select'>");
out.print("<option value=''>-- Select --</option>");
out.print("<option value='"+reqNo1+"'>"+reqNo1+"</option>");
		while(rs.next()){
		  reqNo1=rs.getString("ReqNo");
		  out.print("<option value='"+reqNo1+"'>"+reqNo1+"</option>");
		}
out.print("</select>");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write(" <ul>\r\n");
      out.write(" <li><p>We are always keen to receive your views on the training we deliver.</p></li> \r\n");
      out.write("<li><p> The feedback you give, allows us to continually adapt training to better suit your needs. </p></li>\r\n");
      out.write(" <li><p>We would appreciate it if you could spend a few minutes filling in this form before you leave.  </li></p>\r\n");
      out.write(" \r\n");
      out.write("\t");

	String fill=(String)request.getParameter("fieldFill");
	if(fill!=null && fill.equals("notFill")){
	out.print("<p font-weight:900;' ><font color='red' > All Field Required..!</font></p>");
	}
	try{ 
	
	String s9="select * from Feedback";
	PreparedStatement stmt9=conn.prepareStatement(s9);
	ResultSet rs9=stmt9.executeQuery();
		out.print("<table cellpadding='10' cellspacing='10' class='TFtable'>");
		out.print("<tr ><th> Srno </th><th align='center'> Question </th> <th> Poor </th> <th> Average </th> <th> Good </th> <th> Excellent</th></tr>");
		for(int i=0;i<13;i++){
		rs9.next();
		String question=rs9.getString("Question");
		out.print("<tr><td align='center'>"+(i+1)+"</td><td>"+question+"</td>");
			if(i<10){
				for(int j=0;j<4;j++){
				out.print("<td><input type='radio' name='"+i+"' id='"+i+"' value='"+j+"'></td>");
				}
				out.print("</tr>");
			}
			else{
			out.print("<td colspan='4'><textarea rows='4' cols='50' id='"+i+"' name='"+i+"'"+"></textarea></td></tr>");
			}
		}
		
		out.print("</table>");
      out.write("\r\n");
      out.write("\t<br><br>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t           &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t\t   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t\t   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t\t   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t\t   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<input type='submit' name='act' value='_' onclick='return myFun()' class='button7'>\r\n");
      out.write("\t\t\t   <!-- &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<input type=\"submit\" value=\"-\" name=\"act\" class=\"button6\"> -->\t\t\t   \r\n");
      out.write("\t");
} catch(Exception e){ 
		out.println(e);
	 } finally{
	conn.close();
	} 
	
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write(" </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
}else{
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>alert(\"Sorry you are not allow to give your Feedback because you don't have any request panding..\"); </script>\r\n");
//out.print("<p>Sorry you are not allow to give your Feedback because you don't have any request panding..<br>");out.print("Go to Home Page <a href='/Dummy/Second.jsp?name="+name+"'> Click here</a></p>");

/* response.sendRedirect(response.sendRedirect("/second.jsp?pendingRequest=notPresent")); */
}
}catch(Exception e){
out.print(e);
}


      out.write("\r\n");
      out.write("\r\n");
      out.write(" </body>\r\n");
      out.write(" </html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
