/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-04-29 18:03:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;
import java.util.Date;
import java.text.*;
import java.util.Properties;
import java.sql.*;
import javax.sql.*;
import java.sql.*;
import javax.sql.*;
import java.sql.*;
import javax.sql.*;
import java.sql.*;
import javax.sql.*;
import java.sql.*;
import javax.sql.*;
import java.util.Date;
import java.sql.*;
import javax.sql.*;
import java.util.Date;
import java.text.*;

public final class SecondAdmin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	String date123;
	
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/LogoutAdmin.jsp", Long.valueOf(1458751858000L));
    _jspx_dependants.put("/CustomSearch.jsp", Long.valueOf(1459246646000L));
    _jspx_dependants.put("/RaiseRequestCloseForAdmin.jsp", Long.valueOf(1458233078000L));
    _jspx_dependants.put("/FeedBackDataForAdmin.jsp", Long.valueOf(1458231684000L));
    _jspx_dependants.put("/TrainingPortalHeader.html", Long.valueOf(1434788270000L));
    _jspx_dependants.put("/RoleAssignmentCloseForAdmin.jsp", Long.valueOf(1458233546000L));
    _jspx_dependants.put("/TestSchedule.jsp", Long.valueOf(1458233810000L));
    _jspx_dependants.put("/ColsedRequest.jsp", Long.valueOf(1458233428000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script>\r\n");
      out.write("window.location.hash=\"no-back-button\";\r\n");
      out.write("window.location.hash=\"Again-No-back-button\";//again because google chrome don't insert first hash into history\r\n");
      out.write("window.onhashchange=function(){window.location.hash=\"no-back-button\";}\r\n");
      out.write("</script> \r\n");
      out.write("<!--<script type = \"text/javascript\" >\r\n");
      out.write("    history.pushState(null, null, 'DateCheck.jsp');\r\n");
      out.write("    window.addEventListener('popstate', function(event) {\r\n");
      out.write("    history.pushState(null, null, 'DateCheck.jsp');\r\n");
      out.write("    });\r\n");
      out.write("</script> --> \r\n");
      out.write("  <link href=\"date_jquery_ui.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"date_jquery_min.js\"></script>\r\n");
      out.write("  <script src=\"date_jquery_ui_min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("  $(document).ready(function() {\r\n");
      out.write("    $(\"#datepicker\").datepicker();\r\n");
      out.write("  });\r\n");
      out.write("  $(document).ready(function() {\r\n");
      out.write("    $(\"#datepicker1\").datepicker();\r\n");
      out.write("  });\r\n");
      out.write("  </script>\r\n");
      out.write("<link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("p {font-family: Cambria; font-size: 25pt; text-align: center;}\r\n");
      out.write("\r\n");
      out.write("#coolMenu,\r\n");
      out.write("#coolMenu ul {\r\n");
      out.write("    list-style: none;\r\n");
      out.write("\tdisplay:inline;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu {\r\n");
      out.write("    float: left;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu > li {\r\n");
      out.write("    float: left;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu li a {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("    height: auto;\r\n");
      out.write("    line-height: 2em;\r\n");
      out.write("    padding: 0 1.5em;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu ul {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    display: none;\r\n");
      out.write("z-index: 999;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu ul li a {\r\n");
      out.write("    width: auto;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu li:hover ul {\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu {\r\n");
      out.write("    font-family: Arial;\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("    background: #2f8be8;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu > li > a {\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu > li:hover > a {\r\n");
      out.write("    background: #f09d28;\r\n");
      out.write("    color: #000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#coolMenu ul {\r\n");
      out.write("    background: #f09d28;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu ul li a {\r\n");
      out.write("    color: #000;\r\n");
      out.write("}\r\n");
      out.write("#coolMenu ul li:hover a {\r\n");
      out.write("    background: #ffc97c;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t\t\tbody{\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("            padding-top: 0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<img src=\"./images/PortalHeader.png\" width=\"100%\" height=\"25%\" alt=\"Training Portal\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button1\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Logout.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 100px;\r\n");
      out.write("\t\t\theight: 50px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\tpadding-right: 5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action='SessionInvalidate.jsp' method='post'>\r\n");
      out.write("\r\n");
      out.write("<input type='submit' value='' class=\"button1\"  onclick=\"return confirm('Are you sure you want to Logout?')\" style=\"float: right; position: relative; top: 15px; right: 10px;\"/>\r\n");
      out.write("</form>\r\n");

out.print("<a href='/Dummy/secondadmin'><image src='./images/HOMEBUTTON.png' height='50' width='50' padding-right='10' style='float: right; position: relative; right: 20px;'></a>");

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<ul id=\"coolMenu\">\r\n");
      out.write("  <li><a href=\"/Dummy/SecondAdmin.jsp?para=Home\">Home</a></li>\r\n");
      out.write("  <li><a href=\"#\">Request Manage</a>\r\n");
      out.write("    <ul>\r\n");
      out.write("\t\t\t<li><a href=\"/Dummy/SecondAdmin.jsp?para=Raise Request For Training\">Pending Request</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"/Dummy/SecondAdmin.jsp?para=Completed Request\">Completed Request</a></li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t</ul></li>\r\n");
      out.write("  <li><a href=\"/Dummy/SecondAdmin.jsp?para=Role Assignment\">Role Assignment</a></li>\r\n");
      out.write("  <li><a href=\"/Dummy/SecondAdmin.jsp?para=Feedback Process\">Feedback Process</a></li>\r\n");
      out.write("  <li><a href=\"#\">Test Manage</a>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"/Dummy/SecondAdmin.jsp?para=Test Schedual\">Schedual Test</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"/Dummy/SecondAdmin.jsp?para=Test Data\">Test Data</a></li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t</ul></li>\r\n");
      out.write("\t<li><a href=\"http://heintra:1987/SITES/HEDCONNECT/hes/powai/saral_plm/DocPortal/PLM%20Video/Forms/AllItems.aspx\r\n");
      out.write("\">Online Training Module</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");

String param=request.getParameter("para");
if(param!=null){
	if(param.equals("Home")){
	out.print("<br><br><br><br><br><br><br><br>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tSelect a file to upload: <br />\r\n");
      out.write("<form action=\"UploadServlet.jsp\" method=\"post\"\r\n");
      out.write("                        enctype=\"multipart/form-data\">\r\n");
      out.write("<input type=\"file\" name=\"file\" size=\"50\" />\r\n");
      out.write("<br />\r\n");
      out.write("<input type=\"submit\" value=\"Upload File\" />\r\n");
      out.write("</form>\r\n");
      out.write("\t");
}
	if(param.equals("Raise Request For Training")){
	out.print("<br><br><br>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write(" <link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<head>\r\n");
      out.write("\t<style>\r\n");
      out.write("\tp {\r\n");
      out.write("\tfont-size: 30px;\r\n");
      out.write("\tfont-family: Cambria;\r\n");
      out.write("\tcolor:black;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");

try{
		ServletContext context=null;
		context = pageContext.getServletContext();
		Connection conn1 = (Connection)context.getAttribute("connection_obj");
		
		
		String PSno=request.getParameter("PSNO");
		String s1="select * from PLMTrainingModuleData where (ReqNo like 'ID%' or ReqNo like 'TR%') and Attended='no'";
		PreparedStatement stmt1=conn1.prepareStatement(s1);
		ResultSet rs1=stmt1.executeQuery();
		boolean flag=false;
		if(rs1!=null){
		out.print("<p> Pending Request List </p>");
		out.print("<form action='ConfirmRequestForRole.jsp' method='post'>");
		out.print("<table cellpadding='10' cellspacing='10' align='center' class='TFtable'><tr><th>Request Number</th><th>Role</th><th>Request Raise On</th></tr>");
			while(rs1.next()){
			flag=true;
			String ReqNumber=rs1.getString("ReqNo");
			String Role=rs1.getString("Role");
			String ReqDate=rs1.getString("ReqDate");
			out.print("<tr><td><a href='/Dummy/ConfirmRaiseRequest.jsp?Request="+ReqNumber+"'>"+ReqNumber+
			"</a></td><td>"+Role+"</td><td>"+ReqDate+"</td></tr>");
			}
		out.print("</table></form>");
		}
		if(flag==false){ 
      out.write("\r\n");
      out.write("\t\t<script> alert(\"No Data Found..\"); </script>\r\n");
      out.write("\t\t");
}
}catch(Exception e){
out.print(e);
}
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');
}
	if(param.equals("Completed Request")){
	out.print("<br><br><br>");
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write(" <link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<head>\r\n");
      out.write("\t<style>\r\n");
      out.write("\tp {\r\n");
      out.write("\tfont-size: 30px;\r\n");
      out.write("\tfont-family: Cambria;\r\n");
      out.write("\tcolor:black;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");

try{ 
		ServletContext context=null;
		context = pageContext.getServletContext();
		Connection conn1 = (Connection)context.getAttribute("connection_obj");
		
		String PSno=request.getParameter("PSNO");
		String s1="select * from PLMTrainingModuleData where (ReqNo like 'ID%' or ReqNo like 'TR%') and Attended='yes'";
		PreparedStatement stmt1=conn1.prepareStatement(s1);
		ResultSet rs1=stmt1.executeQuery();
		boolean flag=false;
		if(rs1!=null){
		out.print("<br><br><br><p> Review Request List </p>");
		out.print("<form action='ConfirmRequestForRole.jsp' method='post'>");
		out.print("<table cellpadding='10' cellspacing='10' align='center' class='TFtable'><tr><th>Request Number</th><th>Role</th><th>Request Raise On</th><th>PSNO</th></tr>");
			while(rs1.next()){
			flag=true;
			String ReqNumber=rs1.getString("ReqNo");
			String Role=rs1.getString("Role");
			String ReqDate=rs1.getString("ReqDate");
			String Email = rs1.getString("UserId");
			
			out.print("<tr><td>"+ReqNumber+"</td><td>"+Role+"</td><td>"+ReqDate+"</td><td>"+Email+"</td></tr>");
			}
		out.print("</table></form>");
		}
		if(flag==false){
		out.print("No Data Found..");
		}
}catch(Exception e){
out.print(e);
}
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');
}
	if(param.equals("Role Assignment")){
	out.print("<br><br><br>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<style>\r\n");
      out.write("\tp {\r\n");
      out.write("\tfont-size: 30px;\r\n");
      out.write("\tfont-family: Cambria;\r\n");
      out.write("\tcolor:black;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");

try{ 


		ServletContext context=null;
		context = pageContext.getServletContext();
		Connection conn1 = (Connection)context.getAttribute("connection_obj");
		
		String PSno=request.getParameter("PSNO");
		String s1="select * from PLMTrainingModuleData where ReqNo like 'RA%' and Attended='no'";
		PreparedStatement stmt1=conn1.prepareStatement(s1);
		ResultSet rs1=stmt1.executeQuery();
		boolean flag=false;
		if(rs1!=null){
		out.print("<p> Pending Request List </p>");
		out.print("<form action='ConfirmRequestForRole.jsp' method='post'>");
		out.print("<table cellpadding='10' cellspacing='10' align='center' class='TFtable'><tr><th>Request Number</th><th>New Role</th><th>Request Raise On</th></tr>");
			while(rs1.next()){
			flag=true;
			String ReqNumber=rs1.getString("ReqNo");
			String Role=rs1.getString("Role");
			String ReqDate=rs1.getString("ReqDate");
			out.print("<tr><td><a href='/Dummy/ConfirmRequestForRole.jsp?Request="+ReqNumber+"'>"+ReqNumber+
			"</a></td><td>"+Role+"</td><td>"+ReqDate+"</td></tr>");
			}
		out.print("</table></form>");
		}
		if(flag==false){
      out.write("\r\n");
      out.write("\t\t<script> alert(\"No Data Found..\"); </script>\r\n");
      out.write("\t\t");
}
}catch(Exception e){
out.print(e);
}
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');
}
	if(param.equals("Feedback Process")){
	out.print("<br><br><br><br><br>");
	
	out.print("<form action='SecondAdmin.jsp?para=Feedback Process' method='post'>");
	out.print("Enter PS No : &nbsp <input type='text' name='PSNO' >");
	out.print("<input type='submit' value='Search' name='PSNo'>");
	out.print("</form>");
		String PSNO1=request.getParameter("PSNO");
		if(PSNO1!=null && PSNO1!=""){
		out.print("<p> List Of Feedback givent by "+PSNO1+"</p>");
		
      out.write(" \r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");

try{ 

		ServletContext context=null;
		context = pageContext.getServletContext();
		Connection conn1 = (Connection)context.getAttribute("connection_obj");
		
		String PSno=request.getParameter("PSNO");
		String s1="select * from PLMTrainingModuleData where UserId='"+PSno+"' and Feedback='yes'";
		PreparedStatement stmt1=conn1.prepareStatement(s1);
		ResultSet rs1=stmt1.executeQuery();
		boolean flag=false;
		if(rs1!=null){
		out.print("<form action='DisplayFeedBackData.jsp' method='post'>");
		out.print("<table cellpadding='10' cellspacing='10' align='center' class='TFtable'><tr><th>Request Number</th><th>Role</th><th>Location</th><th>Training Date</th></tr>");
			while(rs1.next()){
			flag=true;
			String ReqNumber=rs1.getString("ReqNo");
			String Location=rs1.getString("Location");
			String Role=rs1.getString("Role");
			String TrainingDate=rs1.getString("TrainingReqDate");
			out.print("<tr><td><a href='/Dummy/DisplayFeedBackData.jsp?Request="+ReqNumber+"'>"+ReqNumber+
			"</a></td><td>"+Role+"</td><td>"+Location+"</td><td>"+TrainingDate+"</td></tr>");
			}
		out.print("</table></form>");
		}
		if(flag==false){
		out.print("No Data Found..");
		}
}catch(Exception e){
out.print(e);
}
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t");
}
	}
	if(param.equals("Test Schedual")){ /*  done.. */

	String mod=request.getParameter("module");
	String PS=request.getParameter("PSNo");
	String MaxTime=request.getParameter("MaxTime");
	String PassPer=request.getParameter("PassPercentage");
	String DatePick=request.getParameter("datepick");
	String MaxQue=request.getParameter("MaxQuestion");
	out.print("<br><br><br><br><br>");
		if(mod!=null && mod.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please select any Modual for Schedual TEST</font></p>");
		}
		else if(PS!=null && PS.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please enter PS No for Schedual TEST</font></p>");
		}
		else if(MaxTime!=null && MaxTime.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please Enter Max Time for Schedual TEST</font></p>");
		}
		else if(MaxTime!=null && MaxTime.equals("notInt")){
		out.print("<br><br><br><br><p align='center'><font color='red' >MaxTime must be some Integer value..</font></p>");
		}
		else if(PassPer!=null && PassPer.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please Pass Percentage for Schedual TEST</font></p>");
		}
		else if(PassPer!=null && PassPer.equals("notInt")){
		out.print("<br><br><br><br><p align='center'><font color='red' >Pass Percentage Must be some Integer..</font></p>");
		}
		else if(DatePick!=null && DatePick.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please select any Date for Schedual TEST</font></p>");
		}
		else if(DatePick!=null && DatePick.equals("notProper")){
		out.print("<br><br><br><br><p align='center'><font color='red' >Entered date is not in correct format..</font></p>");
		}
		else if(MaxQue!=null && MaxQue.equals("notFill")){
		out.print("<br><br><br><br><p align='center'><font color='red' >please Enter Max Question for Schedual TEST</font></p>");
		}
		else if(MaxQue!=null && MaxQue.equals("notInt")){
		out.print("<br><br><br><br><p align='center'><font color='red' >MaxQuestion must be some Integer value..</font></p>");
		}
		
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <link href=\"date_jquery_ui.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"date_jquery_min.js\"></script>\r\n");
      out.write("  <script src=\"date_jquery_ui_min.js\"></script>\r\n");
      out.write("  <link href=\"TableStyle.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("  <script>\r\n");
      out.write("  $(document).ready(function() {\r\n");
      out.write("    $(\"#datepicker\").datepicker();\r\n");
      out.write("  });\r\n");
      out.write("  </script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\tfunction myFunction(){\r\n");
      out.write("\t\t\t\tvar AllCheckOptions = document.getElementsByName('typeOfQuestion');\r\n");
      out.write("\t\t\t\tvar ThisChecked = 'No';\r\n");
      out.write("\t\t\t\tfor (x = 0; x < AllCheckOptions.length; x++)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t if (AllCheckOptions[x].checked && ThisChecked == 'No')\r\n");
      out.write("\t\t\t\t\t {\r\n");
      out.write("\t\t\t\t\t\t ThisChecked = 'Yes';\r\n");
      out.write("\t\t\t\t\t\t break;\r\n");
      out.write("\t\t\t\t\t } \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(ThisChecked == 'No'){\r\n");
      out.write("\t\t\t\talert('Module must be select..');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tvar psNo=document.getElementById('PSNO').value;\r\n");
      out.write("\t\t\tif(psNo.length < 1){\r\n");
      out.write("\t\t\talert(\"PSNO must be entered..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar per=document.getElementById('per').value;\r\n");
      out.write("\t\t\tif(per.length < 1){\r\n");
      out.write("\t\t\talert(\"Passing Percentage must be entered..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar perCheck = parseInt(per);\r\n");
      out.write("\t\t\tif(isNaN(perCheck)){\r\n");
      out.write("\t\t\talert(\"Passing Percentage must be any Integer value..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar time=document.getElementById('time').value;\r\n");
      out.write("\t\t\tif(time.length < 1){\r\n");
      out.write("\t\t\talert(\"Maximum Time must be entered..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar timeCheck = parseInt(time);\r\n");
      out.write("\t\t\tif(isNaN(timeCheck)){\r\n");
      out.write("\t\t\talert(\"Maximum Time must be any Integer value..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar MaxQue=document.getElementById('MaxQuestion').value;\r\n");
      out.write("\t\t\tif(MaxQue.length < 1){\r\n");
      out.write("\t\t\talert(\"Maximum Time must be entered..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar queCheck = parseInt(MaxQue);\r\n");
      out.write("\t\t\tif(isNaN(queCheck)){\r\n");
      out.write("\t\t\talert(\"Max Question must be any Integer value..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar datecheck=document.getElementById('datepicker').value;\r\n");
      out.write("\t\t\tdate123 = datecheck;\r\n");
      out.write("\t\t\tif(datecheck.length < 1){\r\n");
      out.write("\t\t\talert(\"date field required..\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar date= new Date(datecheck);\r\n");
      out.write("\t\t\tvar\tsysdate = new Date();\r\n");
      out.write("\t\t\tsysdate.setDate(sysdate.getDate()-1);\r\n");
      out.write("\t\t\t\tif( sysdate.getTime() > date.getTime() ){\r\n");
      out.write("\t\t\t\talert(\"alteast today's date must select..\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write(" <style type=\"text/css\">\r\n");
      out.write(" table {\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" table, td, th {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td{font-family: Arial; font-size: 13pt;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#CDFFFF\">\r\n");
      out.write("<form action=\"AddTestInDB.jsp\" method=\"post\">\r\n");

try{ 

	ServletContext context=null;
	context = pageContext.getServletContext();
	Connection conn1 = (Connection)context.getAttribute("connection_obj");
		
	
	String s1="select distinct type from DummtTestQuestion";
	PreparedStatement stmt1=conn1.prepareStatement(s1);
	ResultSet rs1=stmt1.executeQuery();
	out.print("<table border='0' align='center' class='TFtable'><tr><td colspan='2' align='center'>Programs Offered</td></tr>");
	while(rs1.next()){
	String module=rs1.getString("type");
	out.print("<tr><td>"+module+"</td><td><input type='checkbox' name='typeOfQuestion'  value='"+module+"'></td></tr>");
	}
	out.print("<tr><td>Enter user PS no: </td><td><input type='text' name='PSNo' id='PSNO'></td></tr>");
	out.print("<tr><td>Enter Pass %age: </td><td><input type='text' name='PassPercentage' id='per'></td></tr>");
      out.write("\r\n");
      out.write("\t<tr><td>Enter Max Time(in Minute(s)): </td><td><input type='text' name='MaxTime' value='Minute(s)' id='time' onfocus=\"this.value=''\"></td></tr>\r\n");
      out.write("\t");
out.print("<tr><td>Enter No Of Question: </td><td><input type='text' name='MaxQuestion' id='MaxQuestion'></td></tr>");
	out.print("<tr><td>Schedual Test on: </td><td><input type='text' name='datepick' id='datepicker' /> </td></tr>");
      out.write("\r\n");
      out.write("\t<tr><td colspan='2'><input type='submit' value='submit' name='submit' onclick='return myFunction()'></td></tr>\r\n");
      out.write("\t\r\n");
      out.write("\t");
out.print("</table>");
	
	
}catch(Exception e){
out.print(e);
}

      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');
}
	if(param.equals("Test Data")){
	out.print("<br><br><br>");
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<body bgcolor=\"#7FFFD4\">\r\n");
      out.write("<br><br><br><br><br><br>\r\n");
      out.write("<form action=\"secondadmin?para=Test Data\" method=\"post\">\r\n");
      out.write("Start Date: <input type=\"text\" size=\"11\" name=\"Start_Date\" id=\"datepicker\" >\r\n");
      out.write("End Date: <input type=\"text\" size=\"11\" name=\"End_Date\" id=\"datepicker1\" />\r\n");
      out.write("<input type=\"submit\" name=\"search\" value=\"DateSearch\">\r\n");
      out.write("<br><br>\r\n");
      out.write("Enter PS No : &nbsp <input type='text' size=\"11\" name='PSNO' >\r\n");
      out.write("<input type='submit' value='PSsearch' name='search'>\r\n");
      out.write("\r\n");



      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');

	String s=null;
	String searchCheck;
	searchCheck=request.getParameter("search");
		try{ 
		ServletContext context=null;
		context = pageContext.getServletContext();
		Connection conn2 = (Connection)context.getAttribute("connection_obj");
		
		
		if(searchCheck!=null && searchCheck.equals("DateSearch")){
		String Sdate=request.getParameter("Start_Date");
		String Edate=request.getParameter("End_Date");
		if(Sdate==null || Sdate==""){
			if(Edate==null || Edate==""){ // when both field is empty..
			out.print("Atleast One Date is required..");
			}else{ // when only end date is given
			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
			Date date = new Date(Edate);
			String EDate=dateFormat.format(date);
			s="select * from AdminSchedualTest where SchedualDate <= '"+EDate+"'";
			}
		}else{
			if(Edate==null || Edate==""){ //when only staring date is given..
			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
			Date date = new Date(Sdate);
			String SDate=dateFormat.format(date);
			s="select * from AdminSchedualTest where SchedualDate >= '"+SDate+"'";
			}
			else{ // when both date given
			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
			Date date = new Date(Sdate);
			Date date1 = new Date(Edate);
			String SDate=dateFormat.format(date);
			String EDate=dateFormat.format(date1);
			s="select * from AdminSchedualTest where SchedualDate between '"+SDate+"' and '"+EDate+"'";
			}
		}
		}else if(searchCheck!=null && searchCheck.equals("PSsearch")){
		String psNo = request.getParameter("PSNO");
			if(psNo!=null || psNo!=""){
			s="select * from AdminSchedualTest where PSNo='"+psNo+"'";
			}
		}
		if(s!=null && s!="" && !s.equals("")){
		PreparedStatement stmt2=conn2.prepareStatement(s);
		ResultSet rs2=stmt2.executeQuery();
		out.print("<table cellpadding='10' cellspacing='10' class='TFtable'><th>PSNO</th><th>SchedualDate</th><th>Modual</th><th>Attend</th><th>Marks</th><th>Attened_Date</th><th>Result</th></tr>");
		while(rs2.next()){
		String PSNo=rs2.getString("PSNo");
		java.sql.Date SchDate=rs2.getDate("SchedualDate");
		String Modual=rs2.getString("Modual");
		String Attend=rs2.getString("Attend");
		int Marks=rs2.getInt("Marks");
		java.sql.Date AttDate=rs2.getDate("AttendedDate");
		String P_F=rs2.getString("Pass_Fail");
		if(Attend!=null && Attend.equals("no")){
		out.print("<tr bgcolor='#8FBC8F'><td>"+PSNo+"</td><td>"+SchDate+"</td><td>"+Modual+"</td><td>"+Attend+"</td><td>-</td><td>-</td><td>-</td></tr>");
		}else{
		out.print("<tr bgcolor='#90EE90'><td>"+PSNo+"</td><td>"+SchDate+"</td><td>"+Modual+"</td><td>"+Attend+"</td><td align='center'>"+Marks+
		"</td><td>"+AttDate+"</td><td>"+P_F+"</td><tr>");
		}
		}
		out.print("</table>");
		}
		}catch(Exception e){
		out.print(e);
		}
	}
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
