/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-04-29 18:03:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.util.Date;

public final class RoleAssignment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


String sessionUsername;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/BackButton.html", Long.valueOf(1434951674000L));
    _jspx_dependants.put("/LogoutRole.jsp", Long.valueOf(1435035938000L));
    _jspx_dependants.put("/SubmitButton.html", Long.valueOf(1434787212000L));
    _jspx_dependants.put("/TrainingPortalHeader.html", Long.valueOf(1434788270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>\r\n");
      out.write("\t\tRoleAssignment\r\n");
      out.write("\t</title>\r\n");
      out.write("\t<style>\r\n");
      out.write("\tbody{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable, td, th ,p{\r\n");
      out.write("\tfont-family: Cambria;\r\n");
      out.write("\tfont-size: 25px;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\t}\r\n");
      out.write("\th1,h2{\r\n");
      out.write("\tfont-family: Cambria;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#aabf00\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t\t\tbody{\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("            padding-top: 0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<img src=\"./images/PortalHeader.png\" width=\"100%\" height=\"25%\" alt=\"Training Portal\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button1\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Logout.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 100px;\r\n");
      out.write("\t\t\theight: 50px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\tpadding-right: 5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action='SessionInvalidate.jsp' method='post'>\r\n");
      out.write('\r');
      out.write('\n');

sessionUsername=(String)session.getAttribute("userName");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<input type='submit' value='' class=\"button1\"  onclick=\"return confirm('Are you sure you want to Logout?')\" style=\"float: right; position: relative; top: 15px; right: 10px;\"/>\r\n");
      out.write("</form>\r\n");

out.print("<a href='/Dummy/Second.jsp?name="+sessionUsername+"'><image src='./images/HOMEBUTTONROLE.png' height='50' width='50' padding-right='10' style='float: right; position: relative; right: 20px;'></a>");

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<form action=\"RoleAssignCheck.jsp\" method=\"post\">\r\n");

try{ 

ServletContext context=null;
context = pageContext.getServletContext();
Connection conn2 = (Connection)context.getAttribute("connection_obj");
		

String name=(String)session.getAttribute("userName");
String r="select PersonRole from authentication where Email='"+name+"'";
PreparedStatement stmt2=conn2.prepareStatement(r);
ResultSet rs2=stmt2.executeQuery();
if(rs2!=null && rs2.next()){
String role = rs2.getString("PersonRole");
String totalRole[] = role.split("[,]");
out.print(" <table align='center'> <tr><td>Old Role:</td><td></td></tr>");
	for(int i=0;i<totalRole.length;i++){
	if(totalRole[i].equalsIgnoreCase("Employee") || totalRole[i].equalsIgnoreCase("ExchangeUser") || totalRole[i].equalsIgnoreCase("HarnessUser") || totalRole[i].equalsIgnoreCase("") || totalRole[i].equalsIgnoreCase("Auditor") || totalRole[i].equalsIgnoreCase("null") || totalRole[i].equalsIgnoreCase("DepartmentRepresentative")){
	}
	else{
		out.print("<tr><td></td><td><input type='checkbox' name='role' disabled='true' checked='true'>"+totalRole[i]+"</td></tr>");
	}
	}
}
r="select distinct Role from PLMTrainingRoleBasedModule";
PreparedStatement stmt3=conn2.prepareStatement(r);
ResultSet rs3=stmt3.executeQuery();
out.print("<tr><td> New Role: </td><td><select name='new_role'><option value=''>-- Select --</option>");
while(rs3.next()){
String rol=rs3.getString("Role");
out.print("<option value='"+rol+"'>"+rol+"</option>");
}
out.print("<option value='All'> All Role </option>");
out.print("</td></tr></select>");
}
catch(Exception e){
out.print(e);
}

      out.write("\r\n");
      out.write("<tr><td colspan=\"2\" align=\"center\">");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/Sumbit.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 90px;\r\n");
      out.write("\t\t\theight: 30px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<input type=\"submit\" value=\"_\" name=\"act\" class=\"button\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(" <!--&nbsp&nbsp&nbsp ");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("            .button3\r\n");
      out.write("            {\r\n");
      out.write("            background-image: url('./images/back_7.png');\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\twidth: 90px;\r\n");
      out.write("\t\t\theight: 30px;\r\n");
      out.write("\t\t\twebkit-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-moz-background-size: 100% 100%;\r\n");
      out.write("\t\t\t-o-background-size: 100% 100%;\r\n");
      out.write("\t\t\tbackground-size: 100% 100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<input type=\"submit\" value=\"-\" name=\"go\" class=\"button3\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(" --></td></tr>\r\n");
      out.write("</table>\r\n");

String check=request.getParameter("new_role");
if(check!=null && check.equals("notSelect")){
      out.write("\r\n");
      out.write("<script> alert(\" Please Select New Role..\"); </script>\r\n");
}

      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
